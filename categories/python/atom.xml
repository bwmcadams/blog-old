<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | Bytes.Codes]]></title>
  <link href="http://bytes.codes/categories/python/atom.xml" rel="self"/>
  <link href="http://bytes.codes/"/>
  <updated>2016-04-11T15:51:54-06:00</updated>
  <id>http://bytes.codes/</id>
  <author>
    <name><![CDATA[Brendan McAdams]]></name>
    <email><![CDATA[brendan@bytes.codes]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Talking to ActiveDirectory from IronPython]]></title>
    <link href="http://bytes.codes/2009/10/20/talking-to-activedirectory-from-iron-python/"/>
    <updated>2009-10-20T00:00:00-06:00</updated>
    <id>http://bytes.codes/2009/10/20/talking-to-activedirectory-from-iron-python</id>
    <content type="html"><![CDATA[<p>We’re building a new intranet system at work, and I’ve been toying with a few things that the Windows admin asked for.  Namely, since the secretaries here will update the intranet data to add people’s Work &amp; Emergency contact numbers, AIM handles, email addresses, etc. that we find a way to keep it all in sync with ActiveDirectory.  Thereby keeping all the Outlooks  and Blackberries up to date with the latest contact information.</p>

<p>This seemed like a fairly reasonable request, presuming we could figure out how to do it and since I’ve been using Mono and IronPython a lot more lately, I figured there would be a way to accomplish it.  Most of the information I found online was either really old and/or crappy docs for doing it in C#, or more commonly using PowerShell or VBScript.  So, I managed to poke around and sort out how to get IronPython on Mono (IronPython 2.6RC + Mono 2.4.2.3) to find and update our users.</p>

<p>The end result is that I can now, from IronPython, find and update valid information on ActiveDirectory entries to reflect the latest and greatest information.  One thing to note, the MS .Net ActiveDirectory APIs (System.DirectoryServices, which is mirrored in Mono) do something that confused and annoyed me.  There are a limited set of ‘valid’ attribute keys for a user object in Active Directory (Which is really just LDAP, in case you didn’t know).  The <code>DirectoryEntry</code> object has a Properties attribute, which contains a hashmap of these values.</p>

<!--more-->

<p>The object will <strong>not</strong> allow you to set an “Invalid” key (see <a href="http://www.dotnetactivedirectory.com/Understanding_LDAP_Active_Directory_User_Object_Properties.html">this list</a> for valid keys).  But if you call <code>.Properties.Keys</code> you <em>only</em> get back the Properties that have values set.  So, it doesn’t appear to be possible to actually ask <em>What keys are valid?</em> and do some introspective programming.  I have written a wrapper class to make the DirectoryEntry properties look a bit more pythonic (but disabled support for multi-value attributes for now) - at some point in the near future i’ll likely add in a “valid value” filter.</p>

<p>The end result is, if I want to find my own user in ActiveDirectory by my name, I can do the following from the IronPython console:</p>

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="kn">import</span> <span class="nn">ad_util</span>
<span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">adh</span> <span class="o">=</span> <span class="n">ad_util</span><span class="o">.</span><span class="n">ActiveDirectorySearcher</span><span class="p">(</span><span class="err">‘</span><span class="n">mydomaincontroller</span><span class="o">.</span><span class="n">hostname</span><span class="o">.</span><span class="ow">or</span><span class="o">.</span><span class="n">ip</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">my</span><span class="o">.</span><span class="n">domain</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">myUsernameAllowedToChangeObjects</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">myPassword</span><span class="err">’</span><span class="p">)</span>
<span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">adh</span>
<span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">ActiveDirectorySearcher</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x000000000000002D</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
<span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">userObj</span> <span class="o">=</span> <span class="n">adh</span><span class="o">.</span><span class="n">find_name</span><span class="p">(</span><span class="err">‘</span><span class="n">McAdams</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Brendan</span><span class="err">’</span><span class="p">)</span>
<span class="p">[</span><span class="n">debug</span><span class="p">]</span> <span class="n">Searching</span> <span class="n">activedirectory</span> <span class="k">for</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(</span><span class="n">objectCategory</span><span class="o">=</span><span class="n">user</span><span class="p">)(</span><span class="n">objectClass</span><span class="o">=</span><span class="n">person</span><span class="p">)(</span><span class="n">sAMAccountName</span><span class="o">=&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)(</span><span class="n">sn</span><span class="o">=</span><span class="n">McAdams</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span>
<span class="p">(</span><span class="n">givenname</span><span class="o">=</span><span class="n">Brendan</span><span class="o">*</span><span class="p">))</span><span class="o">.</span>  <span class="n">Allow</span> <span class="n">multiple</span> <span class="n">results</span><span class="err">?</span> <span class="bp">False</span>
<span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">userObj</span>
<span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">DirectoryEntryHelper</span><span class="p">:{</span><span class="n">sn</span><span class="o">=</span><span class="n">McAdams</span><span class="p">,</span><span class="n">givenName</span><span class="o">=</span><span class="n">Brendan</span><span class="p">,</span><span class="n">mail</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">sAMAccountName</span><span class="o">=</span><span class="n">brendan</span><span class="o">.</span><span class="n">mcadams</span><span class="p">}</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span></code></pre></div></p>

<p>You’ll note the object returned is a “DirectoryEntryHelper” type; this is a crappy little wrapper class I put together to simplify attribute access, etc.   You can tell any of the find_ methods to return a raw .Net API object instead of wrapped by passing the kwarg <code>nowrap=True</code>;  <code>find_name()</code> takes <code>last_name, first_name</code>.  Several other utility methods exist on the class including find by account name.  Note that, in order to filter out entries in the Global Address List I’m requiring the search to find objects who have sAMAccountNames. I know the bare minimum about ActiveDirectory, but my Windows admin here tells me that sAMAccountName is a required and <em>unique</em> attribute on any actual domain account object.</p>

<p>You can see the keys that are already defined on the object with the <code>keys</code> helper method I added onto <code>DirectoryEntryHelper</code>:</p>

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">userObj</span><span class="o">.</span><span class="n">keys</span>
<span class="p">[</span><span class="err">‘</span><span class="n">lockouttime</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">primarygroupid</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">msexchuseraccountcontrol</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">distinguishedname</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">cn</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">dscorepropagationdata</span><span class="err">’</span><span class="p">,</span> 
<span class="err">‘</span><span class="n">whencreated</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">logoncount</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">msexchhomeservername</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">objectclass</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">memberof</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">lastlogontimestamp</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">displayname</span><span class="err">’</span><span class="p">,</span>    <span class="err">‘</span><span class="n">msexchalobjectversion</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">objectguid</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">whenchanged</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">badpwdcount</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">useraccountcontrol</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">badpasswordtime</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">name</span><span class="err">’</span><span class="p">,</span> 
<span class="err">‘</span><span class="n">samaccountname</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">mdbusedefaults</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">accountexpires</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">countrycode</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">msds</span><span class="o">-</span><span class="n">supportedencryptiontypes</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">homedirectory</span><span class="err">’</span><span class="p">,</span> 
<span class="err">‘</span><span class="n">userprincipalname</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">lastlogon</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">objectsid</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">givenname</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">homedrive</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">usncreated</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">admincount</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">instancetype</span><span class="err">’</span><span class="p">,</span> 
<span class="err">‘</span><span class="n">codepage</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">physicaldeliveryofficename</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">samaccounttype</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">sn</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">objectcategory</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">telephonenumber</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">pwdlastset</span><span class="err">’</span><span class="p">,</span> 
<span class="err">‘</span><span class="n">usnchanged</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">lastlogoff</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">initials</span><span class="err">’</span><span class="p">]</span></code></pre></div></p>

<p>This returns a comprehended list of the keys (Rather than calling resultObj.Properties.Keys, which returns a Hashtable of HashKeys.  It just makes life easier.</p>

<p>If I want to setup my mobile phone # (which isn’t already set already) in Active Directory:</p>

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">userObj</span><span class="o">.</span><span class="n">mobile</span>
<span class="c"># Nothing returned as mobile isn’t set…</span>
<span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">userObj</span><span class="o">.</span><span class="n">mobile</span> <span class="o">=</span> <span class="err">‘</span><span class="p">(</span><span class="mi">646</span><span class="p">)</span> <span class="mi">555</span><span class="o">-</span><span class="mi">1212</span><span class="err">’</span>
<span class="c"># It is committed on set to Active Directory, so another find gets it…</span>
<span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">newUserObj</span> <span class="o">=</span> <span class="n">test</span><span class="o">.</span><span class="n">adh</span><span class="o">.</span><span class="n">find_name</span><span class="p">(</span><span class="err">‘</span><span class="n">McAdams</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Brendan</span><span class="err">’</span><span class="p">)</span> <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
<span class="p">[</span><span class="n">debug</span><span class="p">]</span> <span class="n">Searching</span> <span class="n">activedirectory</span> <span class="k">for</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(</span><span class="n">objectCategory</span><span class="o">=</span><span class="n">user</span><span class="p">)(</span><span class="n">objectClass</span><span class="o">=</span><span class="n">person</span><span class="p">)(</span><span class="n">sAMAccountName</span><span class="o">=&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)(</span><span class="n">sn</span><span class="o">=</span><span class="n">McAdams</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span>
<span class="p">(</span><span class="n">givenname</span><span class="o">=</span><span class="n">Brendan</span><span class="o">*</span><span class="p">))</span><span class="o">.</span>  <span class="n">Allow</span> <span class="n">multiple</span> <span class="n">results</span><span class="err">?</span> <span class="bp">False</span> 
<span class="err">»</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">newUserObj</span><span class="o">.</span><span class="n">mobile</span>
<span class="err">‘</span><span class="p">(</span><span class="mi">646</span><span class="p">)</span><span class="mi">555</span><span class="o">-</span><span class="mi">1212</span><span class="err">’</span></code></pre></div></p>

<p>I’ll leave the rest as an exercise for the reader, but I’m interested in comments and changes.  You can fetch the latest code from <a href="http://bitbucket.org/bwmcadams/toybox/src/tip/ad_util.py">my BitBucket toybox</a>.  I’ve also pasted it, for posterity sake, below the fold.</p>

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="c">#!IronPython Specific Script!</span>
<span class="c"># </span>
<span class="c"># Brendan W. McAdams &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#098;&amp;#119;&amp;#109;&amp;#099;&amp;#097;&amp;#100;&amp;#097;&amp;#109;&amp;#115;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;&amp;#098;&amp;#119;&amp;#109;&amp;#099;&amp;#097;&amp;#100;&amp;#097;&amp;#109;&amp;#115;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&lt;/a&gt;</span>
<span class="c">#</span>
<span class="c">#————————————————- </span>
<span class="c"># No copyright or licensing, made public</span>
<span class="c"># as example code.  Feel free to use it as you like;</span>
<span class="c"># No warranty, liability or guarantees are implied.&lt;br /&gt;</span>
<span class="c"># In other words, if you use it YOU ARE ON YOUR OWN. </span>
<span class="c">#————————————————-</span>
<span class="c">#</span>
<span class="c"># Utility script to interface from IronPython to </span>
<span class="c"># MS Active Directory, allowing queries of properties </span>
<span class="c"># such as telephone numbers, and changes to said properties</span>
<span class="c"># if you’d like to update them.</span>
<span class="c"># </span>
<span class="c"># Note that your authentication user has to have valid permissions.</span>
<span class="c"># If you’re uncertain as to what permissions are needed, please see</span>
<span class="c"># your AD Admin.&lt;/p&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">clr</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;add-the-systemdirectoryservices-mono-dll-in&quot;</span><span class="o">&gt;</span><span class="n">Add</span> <span class="n">the</span> <span class="n">System</span><span class="o">.</span><span class="n">DirectoryServices</span> <span class="n">Mono</span> <span class="n">DLL</span> <span class="ow">in</span><span class="o">.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c"># not sure on Windows what you need to add,</span>
<span class="c"># but for Mono/Linux you just need to set IRONPYTHONPATH</span>
<span class="c"># to include the location of the dll&lt;/p&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">clr</span><span class="o">.</span><span class="n">AddReference</span><span class="p">(</span><span class="err">‘</span><span class="n">System</span><span class="o">.</span><span class="n">DirectoryServices</span><span class="o">.</span><span class="n">dll</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">sys</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;import-the-ldap--activedirectory-interface&quot;</span><span class="o">&gt;</span><span class="n">Import</span> <span class="n">the</span> <span class="n">LDAP</span> <span class="o">/</span> <span class="n">ActiveDirectory</span> <span class="n">interface</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">System.DirectoryServices</span> <span class="kn">import</span> <span class="o">*&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;a-few-predefined-values-to-simplify-ldap-querying-pilfered-from-various-internet-ey-type-places&quot;</span><span class="o">&gt;</span><span class="n">A</span> <span class="n">few</span> <span class="n">predefined</span> <span class="n">values</span> <span class="n">to</span> <span class="n">simplify</span> <span class="n">LDAP</span> <span class="n">querying</span><span class="p">,</span> <span class="n">pilfered</span> <span class="kn">from</span> <span class="nn">various</span> <span class="nn">internet</span><span class="o">-</span><span class="n">ey</span> <span class="nb">type</span> <span class="n">places</span><span class="o">.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">BINARY_PROPS</span> <span class="o">=</span> <span class="p">(</span><span class="err">‘</span><span class="n">objectguid</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">objectsid</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">msexchmailboxsecuritydescriptor</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">msexchmailboxguid</span><span class="err">’</span><span class="p">)</span>
<span class="n">ACCOUNT_QUERY</span> <span class="o">=</span> <span class="err">“</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(</span><span class="n">objectCategory</span><span class="o">=</span><span class="n">user</span><span class="p">)(</span><span class="n">objectClass</span><span class="o">=</span><span class="n">person</span><span class="p">)(</span><span class="n">sAMAccountName</span><span class="o">=&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">ACCOUNTNAME</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">))</span><span class="err">”</span>
<span class="n">PRINCIPAL_QUERY</span> <span class="o">=</span> <span class="err">“</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(</span><span class="n">objectCategory</span><span class="o">=</span><span class="n">user</span><span class="p">)(</span><span class="n">objectClass</span><span class="o">=</span><span class="n">person</span><span class="p">)(</span><span class="n">userPrincipalName</span><span class="o">=&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">PRINCIPALID__</span><span class="p">))</span><span class="err">”</span>
<span class="n">GROUP_QUERY</span> <span class="o">=</span> <span class="err">“</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(</span><span class="n">objectCategory</span><span class="o">=</span><span class="n">group</span><span class="p">)(</span><span class="n">sAMAccountName</span><span class="o">=</span><span class="n">_GROUPNAME</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">))</span><span class="err">”</span>
<span class="n">PARTIAL_LAST_QUERY</span> <span class="o">=</span> <span class="err">“</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(</span><span class="n">objectCategory</span><span class="o">=</span><span class="n">user</span><span class="p">)(</span><span class="n">sAMAccountName</span><span class="o">=&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)(</span><span class="n">objectClass</span><span class="o">=</span><span class="n">person</span><span class="p">)(</span><span class="n">sn</span><span class="o">=</span><span class="n">_LASTNAME_</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">))</span><span class="err">”</span> 
<span class="n">PARTIAL_NAME_QUERY</span> <span class="o">=</span> <span class="err">“</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(</span><span class="n">objectCategory</span><span class="o">=</span><span class="n">user</span><span class="p">)(</span><span class="n">objectClass</span><span class="o">=</span><span class="n">person</span><span class="p">)(</span><span class="n">sAMAccountName</span><span class="o">=&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)(</span><span class="n">sn</span><span class="o">=</span><span class="n">_LASTNAME_</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)(</span><span class="n">givenname</span><span class="o">=&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">FIRSTNAME</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">))</span><span class="err">”</span> 
<span class="n">PARTIAL_FIRST_QUERY</span> <span class="o">=</span> <span class="err">“</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;(</span><span class="n">objectCategory</span><span class="o">=</span><span class="n">user</span><span class="p">)(</span><span class="n">objectClass</span><span class="o">=</span><span class="n">person</span><span class="p">)(</span><span class="n">sAMAccountName</span><span class="o">=&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)(</span><span class="n">givenname</span><span class="o">=&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">FIRSTNAME</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;*</span><span class="p">))</span><span class="err">”</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">DirectoryEntryHelper</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
  <span class="err">“””</span> <span class="n">Helper</span> <span class="k">class</span> <span class="nc">for</span> <span class="n">wrapping</span>
  <span class="ow">and</span> <span class="n">simplifying</span> <span class="n">AD</span> <span class="n">search</span> <span class="n">results</span><span class="o">.</span>
  <span class="n">As</span> <span class="n">much</span> <span class="n">fun</span> <span class="k">as</span> <span class="n">dealing</span> <span class="k">with</span> <span class="n">Microsoft</span> <span class="n">style</span>
  <span class="nb">object</span> <span class="n">hierarchies</span> <span class="n">can</span> <span class="n">be</span><span class="err">…</span>
  <span class="n">TODO</span><span class="p">:</span> <span class="n">Is</span> <span class="n">there</span> <span class="n">an</span> <span class="n">easy</span> <span class="n">way</span> <span class="n">to</span> <span class="n">inject</span> <span class="n">things</span> <span class="n">into</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="nb">dict</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span> <span class="k">for</span> <span class="nb">dir</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">ipy</span> <span class="n">tab</span> <span class="n">completion</span><span class="err">?</span>
  <span class="err">“””</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="err">&lt;</span><span class="nf">strong</span><span class="o">&gt;</span><span class="n">init</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">entry</span><span class="p">):</span>
      <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">entry</span><span class="p">,</span> <span class="n">SearchResult</span><span class="p">):</span>
          <span class="bp">self</span><span class="o">.&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="nb">dict</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">[</span><span class="err">‘</span><span class="n">_entry</span><span class="err">’</span><span class="p">]</span> <span class="o">=</span> <span class="n">entry</span><span class="o">.</span><span class="n">GetDirectoryEntry</span><span class="p">()</span>
      <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">entry</span><span class="p">,</span> <span class="n">DirectoryEntry</span><span class="p">):</span>
          <span class="bp">self</span><span class="o">.&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="nb">dict</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">[</span><span class="err">‘</span><span class="n">_entry</span><span class="err">’</span><span class="p">]</span> <span class="o">=</span> <span class="n">entry</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">,</span> <span class="err">“</span><span class="n">Invalid</span> <span class="nb">type</span> <span class="err">‘</span><span class="o">%</span><span class="n">s</span><span class="err">’</span><span class="p">,</span> <span class="n">don</span><span class="err">’</span><span class="n">t</span> <span class="n">know</span> <span class="n">how</span> <span class="n">to</span> <span class="n">proxy</span> <span class="n">it</span><span class="err">”</span> <span class="o">%</span> <span class="nb">type</span><span class="p">(</span><span class="n">entry</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nd">@property</span>
  <span class="k">def</span> <span class="nf">properties</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
      <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_entry</span><span class="o">.</span><span class="n">Properties</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nd">@property</span>
  <span class="k">def</span> <span class="nf">keys</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
      <span class="err">“</span><span class="s">&quot;”Returns a comprehended list</span>
      <span class="n">of</span> <span class="n">the</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">defined</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">Keys</span> <span class="n">on</span> <span class="n">the</span> <span class="n">Properties</span> <span class="nb">object</span><span class="o">.</span>
      <span class="n">Any</span> <span class="n">valid</span> <span class="n">keys</span> <span class="n">w</span><span class="o">/</span><span class="n">o</span> <span class="n">values</span> <span class="n">won</span><span class="err">’</span><span class="n">t</span> <span class="n">get</span> <span class="n">listed</span><span class="o">.</span>
      <span class="err">“””</span>
      <span class="k">return</span> <span class="p">[</span><span class="n">key</span> <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">properties</span><span class="o">.</span><span class="n">Keys</span><span class="p">]</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="err">&lt;</span><span class="nf">strong</span><span class="o">&gt;</span><span class="nb">getattr</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
      <span class="err">“</span><span class="s">&quot;”Proxies the Properties objects in the DirectoryEntry</span>
      <span class="n">to</span> <span class="n">provide</span> <span class="n">a</span> <span class="n">simple</span> <span class="n">getter</span><span class="o">.</span>
      <span class="n">First</span> <span class="n">checks</span> <span class="k">if</span> <span class="n">DirectoryEntry</span> <span class="n">has</span> <span class="n">an</span> <span class="n">attribute</span> <span class="p">(</span><span class="nb">property</span><span class="p">)</span>
      <span class="n">matching</span> <span class="n">requested</span> <span class="n">key</span><span class="p">,</span> <span class="ow">and</span> <span class="n">passes</span> <span class="n">that</span> <span class="k">if</span> <span class="n">so</span><span class="o">.</span>
      <span class="n">Otherwise</span><span class="p">,</span> <span class="n">fetches</span> <span class="n">a</span> <span class="n">matching</span> <span class="nb">property</span><span class="o">.</span>  <span class="n">If</span> <span class="n">you</span> <span class="n">have</span>
      <span class="n">a</span> <span class="n">name</span> <span class="n">collison</span><span class="p">,</span> <span class="n">use</span> <span class="n">the</span> <span class="o">.</span><span class="n">properties</span> <span class="nb">property</span> <span class="n">on</span> <span class="n">this</span> <span class="nb">object</span>
      <span class="n">to</span> <span class="n">get</span> <span class="n">a</span> <span class="n">clean</span> <span class="n">copy</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Properties</span> <span class="nb">object</span>
      <span class="n">TODO</span><span class="p">:</span> <span class="n">Better</span> <span class="n">support</span> <span class="k">for</span> <span class="n">multi</span><span class="o">-</span><span class="n">value</span> <span class="n">keys</span> <span class="p">(</span><span class="n">only</span> <span class="n">returns</span> <span class="n">first</span> <span class="n">idx</span> <span class="n">right</span> <span class="n">now</span><span class="p">]</span>
      <span class="err">“””</span>
      <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_entry</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
          <span class="k">return</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_entry</span><span class="p">,</span> <span class="n">key</span><span class="p">)</span>
      <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">_entry</span><span class="o">.</span><span class="n">Properties</span><span class="p">[</span><span class="n">key</span><span class="p">]</span><span class="o">.</span><span class="n">Count</span><span class="p">:</span>
          <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_entry</span><span class="o">.</span><span class="n">Properties</span><span class="p">[</span><span class="n">key</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="k">return</span> <span class="bp">None</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="err">&lt;</span><span class="nf">strong</span><span class="o">&gt;</span><span class="nb">setattr</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
      <span class="err">“</span><span class="s">&quot;”Proxies the Properties objects in the DirectoryEntry </span>
      <span class="n">to</span> <span class="n">provide</span> <span class="n">a</span> <span class="n">simpler</span> <span class="n">setter</span><span class="o">.</span>
      <span class="n">First</span> <span class="n">checks</span> <span class="k">if</span> <span class="n">DirectoryEntry</span> <span class="n">has</span> <span class="n">an</span> <span class="n">attribute</span> <span class="p">(</span><span class="nb">property</span><span class="p">)</span>
      <span class="n">matching</span> <span class="n">requested</span> <span class="n">key</span><span class="p">,</span> <span class="ow">and</span> <span class="n">sets</span> <span class="n">on</span> <span class="n">that</span> <span class="k">if</span> <span class="n">so</span><span class="o">.</span>
      <span class="n">Otherwise</span><span class="p">,</span> <span class="n">sets</span> <span class="n">upon</span> <span class="n">a</span> <span class="n">matching</span> <span class="nb">property</span><span class="o">.&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
      <span class="n">If</span> <span class="n">the</span> <span class="nb">property</span> <span class="n">has</span> <span class="n">an</span> <span class="n">existing</span> <span class="n">count</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">,</span> <span class="n">sets</span> <span class="n">Index</span> <span class="mi">0</span><span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
      <span class="n">If</span> <span class="ow">not</span><span class="p">,</span> <span class="n">it</span> <span class="n">does</span> <span class="n">an</span> <span class="n">Add</span><span class="p">()</span><span class="o">.</span>
      <span class="n">The</span> <span class="n">way</span> <span class="n">the</span> <span class="n">MS</span> <span class="n">Classes</span> <span class="n">work</span><span class="p">,</span> <span class="n">Properties</span><span class="o">.</span><span class="n">Keys</span> <span class="n">only</span> <span class="n">returns</span> <span class="n">keys</span> <span class="n">that</span>
      <span class="n">have</span> <span class="n">a</span> <span class="n">value</span> <span class="n">count</span><span class="o">.</span>  <span class="n">However</span><span class="p">,</span> <span class="nb">any</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">valid</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">Key</span> <span class="n">has</span> <span class="n">a</span> <span class="n">silent</span> <span class="n">value</span> <span class="n">which</span>
      <span class="n">can</span> <span class="n">be</span> <span class="n">initialized</span> <span class="n">via</span> <span class="n">Add</span><span class="p">()</span><span class="o">.</span>
      <span class="n">Invalid</span> <span class="n">keys</span> <span class="n">throw</span> <span class="n">an</span> <span class="n">error</span><span class="p">,</span> <span class="n">so</span> <span class="n">you</span> <span class="n">can</span><span class="err">’</span><span class="n">t</span> <span class="n">be</span> <span class="n">arbitrary</span><span class="o">.</span>
      <span class="n">I</span> <span class="n">use</span> <span class="n">a</span> <span class="nb">list</span> <span class="n">of</span> <span class="n">keyspace</span> <span class="n">found</span> <span class="n">at</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>      <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">dotnetactivedirectory</span><span class="o">.</span><span class="n">com</span><span class="o">/</span>\
          <span class="n">Understanding_LDAP_Active_Directory_User_Object_Properties</span><span class="o">.</span><span class="n">html</span>

  <span class="n">If</span> <span class="n">you</span> <span class="n">have</span> <span class="n">a</span> <span class="n">name</span> <span class="n">collison</span><span class="p">,</span> <span class="n">use</span> <span class="n">the</span> <span class="o">.</span><span class="n">properties</span> <span class="nb">property</span> <span class="n">on</span> <span class="n">this</span> <span class="nb">object</span>
  <span class="n">to</span> <span class="n">get</span> <span class="n">a</span> <span class="n">clean</span> <span class="n">copy</span> <span class="n">of</span> <span class="n">the</span> <span class="n">Properties</span> <span class="nb">object</span>
  <span class="n">TODO</span><span class="p">:</span> <span class="n">Better</span> <span class="n">support</span> <span class="k">for</span> <span class="n">multi</span><span class="o">-</span><span class="n">value</span> <span class="n">keys</span> <span class="p">(</span><span class="n">only</span> <span class="n">sets</span> <span class="n">first</span> <span class="n">idx</span> <span class="n">right</span> <span class="n">now</span><span class="p">]</span>
  <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">  if hasattr(self._entry, key):</span>
<span class="sd">      setattr(self._entry, key, value)</span>
<span class="sd">  else:</span>
<span class="sd">      if self._entry.Properties[key].Count &amp;gt; 0:</span>
<span class="sd">          if self._entry.Properties[key].Count &amp;gt; 1:</span>
<span class="sd">              print &amp;gt;&amp;gt; sys.stderr, &quot;[warning] Key &#39;%s&#39; contains multiple values which we don&#39;t properly support yet.  Using Index 0&quot;</span>
<span class="sd">          self._entry.Properties[key][0] = value</span>
<span class="sd">      else:</span>
<span class="sd">          self._entry.Properties[key].Add(value)</span>
<span class="sd">      # commit early, commit often...</span>
<span class="sd">      self._entry.CommitChanges()</span>
<span class="sd">&lt;/code&gt;&lt;/pre&gt;</span>

<span class="sd">&lt;p&gt;def &lt;strong&gt;repr&lt;/strong&gt;(self):</span>
<span class="sd">      “&quot;”Print all pretty like on console.</span>
<span class="sd">      My biggest pet peeve working in .Net is that most objects don’t have</span>
<span class="sd">      any kind of &lt;strong&gt;str&lt;/strong&gt;/&lt;strong&gt;repr&lt;/strong&gt; value on them to give you quick information</span>
<span class="sd">      on their contents.  ARGH!</span>
<span class="sd">      “””</span>
<span class="sd">      return “&amp;lt;DirectoryEntryHelper:{sn=%s,givenName=%s,mail=%s,sAMAccountName=%s}&amp;gt;” %\</span>
<span class="sd">          (self.sn, self.givenName, self.mail, self.sAMAccountName)&lt;/p&gt;</span>

<span class="sd">&lt;p&gt;class ActiveDirectory(object):</span>
<span class="sd">  “”” ActiveDirectory interface class.</span>
<span class="sd">  Tested on IronPython 2.6RC + Mono 2.4.2.3 on Linux. YMMV.</span>
<span class="sd">  “””&lt;/p&gt;</span>

<span class="sd">&lt;p&gt;# Active Directory Handle</span>
<span class="sd">  adh = None&lt;/p&gt;</span>

<span class="sd">&lt;p&gt;server = None</span>
<span class="sd">  domain = None</span>
<span class="sd">  baseDN = None&lt;/p&gt;</span>

<span class="sd">&lt;p&gt;def &lt;strong&gt;init&lt;/strong&gt;(self, server, domain, username, password, baseDN=””):</span>
<span class="sd">      “&quot;”Constructor to instantiate the LDAP connection.</span>
<span class="sd">      server is a resolvable address to your domain controller (e.g. the resolvable hostname or IP)</span>
<span class="sd">      domain should be the ActiveDirectory domain as specified by your admin.</span>
<span class="sd">      If you don’t pass BaseDN, your ‘domain’ argument will be split on</span>
<span class="sd">      . and each piece will be passed as DC=&lt;piece&gt;. This will be used as your BaseDN</span>
<span class="sd">      E.G. domain aurigasv.local becomes &quot;DC=aurigasv,DC=local&quot;&lt;/piece&gt;&lt;/p&gt;</span>

<span class="sd">&lt;pre&gt;&lt;code&gt;  *** Any exception in connecting will be wrapped and rethrown, aborting construction.</span>
<span class="sd">  &quot;&quot;&quot;</span>
  <span class="k">try</span><span class="p">:</span>
      <span class="c"># Setup the baseDN</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">server</span> <span class="o">=</span> <span class="n">server</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">domain</span> <span class="o">=</span> <span class="n">domain</span>
      <span class="k">if</span> <span class="n">baseDN</span><span class="p">:</span>
          <span class="bp">self</span><span class="o">.</span><span class="n">baseDN</span> <span class="o">=</span> <span class="n">baseDN</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="k">for</span> <span class="n">tier</span> <span class="ow">in</span> <span class="n">domain</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">):</span>
              <span class="n">baseDN</span> <span class="o">+=</span> <span class="s">&quot;DC=</span><span class="si">%s</span><span class="s">,&quot;</span> <span class="o">%</span> <span class="n">tier</span>
          <span class="bp">self</span><span class="o">.</span><span class="n">baseDN</span> <span class="o">=</span> <span class="n">baseDN</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
          <span class="c">#print &quot;Established a parsed BaseDN of &#39;%s&#39;&quot; % self.baseDN</span>

      <span class="c"># Establish a directory object, with auth info, pointing at the authenticating user</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">adh</span> <span class="o">=</span> <span class="n">DirectoryEntry</span><span class="p">(</span><span class="s">&quot;LDAP://</span><span class="si">%s</span><span class="s">/</span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">server</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">baseDN</span><span class="p">))</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">adh</span><span class="o">.</span><span class="n">AuthenticationType</span> <span class="o">=</span> <span class="n">AuthenticationTypes</span><span class="o">.</span><span class="n">Secure</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">adh</span><span class="o">.</span><span class="n">Username</span> <span class="o">=</span> <span class="n">username</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">adh</span><span class="o">.</span><span class="n">Password</span> <span class="o">=</span> <span class="n">password</span>

      <span class="c"># connect and fetch a copy of the authenticating user</span>
      <span class="nb">filter</span> <span class="o">=</span> <span class="s">&quot;sAMAccountName=</span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">username</span>
      <span class="n">dsSystem</span> <span class="o">=</span> <span class="n">DirectorySearcher</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">adh</span><span class="p">,</span> <span class="nb">filter</span><span class="p">)</span>
      <span class="n">dsSystem</span><span class="o">.</span><span class="n">SearchScope</span> <span class="o">=</span> <span class="n">SearchScope</span><span class="o">.</span><span class="n">Subtree</span>
      <span class="n">result</span> <span class="o">=</span> <span class="n">dsSystem</span><span class="o">.</span><span class="n">FindOne</span><span class="p">()</span>

      <span class="k">if</span> <span class="ow">not</span> <span class="n">result</span><span class="p">:</span>
          <span class="k">raise</span> <span class="ne">Exception</span><span class="p">,</span> <span class="s">&quot;Found no result searching for specified authentication user </span><span class="si">%s</span><span class="s">.&quot;</span> <span class="o">%</span> <span class="n">username</span>

  <span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
      <span class="k">raise</span> <span class="n">e</span><span class="p">,</span> <span class="s">&quot;Authentication failure.  Did you provide valid connection information / authentication credentials?&quot;</span>
<span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">get_helper</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">result</span><span class="p">):</span>
      <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="err">“</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="nb">iter</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="err">”</span><span class="p">):</span>
          <span class="k">return</span> <span class="p">(</span><span class="n">DirectoryEntryHelper</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">result</span><span class="p">)</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="k">return</span> <span class="n">DirectoryEntryHelper</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">ActiveDirectorySearcher</span><span class="p">(</span><span class="n">ActiveDirectory</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">_search</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">filter</span><span class="p">,</span> <span class="n">multi</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
      <span class="err">“</span><span class="s">&quot;”Semi-private method for searching.</span>
      <span class="n">Note</span> <span class="n">that</span> <span class="err">“</span><span class="nb">filter</span><span class="err">”</span> <span class="n">needs</span> <span class="n">to</span> <span class="n">be</span> <span class="n">a</span> <span class="n">string</span> <span class="n">which</span> <span class="ow">is</span> <span class="n">a</span> 
      <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">VALID</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">LDAP</span> <span class="n">query</span><span class="o">/</span><span class="nb">filter</span><span class="o">.</span>  <span class="n">You</span> <span class="n">should</span> <span class="n">probably</span> <span class="n">use</span> <span class="n">one</span> <span class="n">of</span> <span class="n">the</span> <span class="n">useful</span>
      <span class="n">utility</span> <span class="n">find</span> <span class="n">methods</span> <span class="n">instead</span> <span class="n">of</span> <span class="n">querying</span> <span class="n">this</span> <span class="n">directly</span>
      <span class="n">unless</span> <span class="n">you</span> <span class="n">understand</span> <span class="n">LDAP</span> <span class="n">queries</span>
      <span class="n">By</span> <span class="n">default</span> <span class="n">searches</span> <span class="k">for</span> <span class="n">one</span> <span class="n">only</span><span class="p">,</span> <span class="k">pass</span> <span class="n">multi</span><span class="o">=</span><span class="bp">True</span> <span class="k">for</span> <span class="n">multiple</span> <span class="n">results</span><span class="o">.</span>
      <span class="err">“””</span>
      <span class="k">print</span> <span class="err">“</span><span class="p">[</span><span class="n">debug</span><span class="p">]</span> <span class="n">Searching</span> <span class="n">activedirectory</span> <span class="k">for</span> <span class="o">%</span><span class="n">s</span><span class="o">.</span>  <span class="n">Allow</span> <span class="n">multiple</span> <span class="n">results</span><span class="err">?</span> <span class="o">%</span><span class="n">s</span><span class="err">”</span> <span class="o">%</span> <span class="p">(</span><span class="nb">filter</span><span class="p">,</span> <span class="n">multi</span><span class="p">)</span>
      <span class="n">searcher</span> <span class="o">=</span> <span class="n">DirectorySearcher</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">adh</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">searcher</span><span class="o">.</span><span class="n">ReferralChasing</span> <span class="o">=</span> <span class="n">ReferralChasingOption</span><span class="o">.</span><span class="n">All</span>
  <span class="n">searcher</span><span class="o">.</span><span class="n">SearchScope</span> <span class="o">=</span> <span class="n">SearchScope</span><span class="o">.</span><span class="n">Subtree</span>
  <span class="n">searcher</span><span class="o">.</span><span class="n">Filter</span> <span class="o">=</span> <span class="nb">filter</span>

  <span class="n">results</span> <span class="o">=</span> <span class="n">searcher</span><span class="o">.</span><span class="n">FindAll</span><span class="p">()</span>

  <span class="k">if</span> <span class="n">results</span><span class="o">.</span><span class="n">Count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
      <span class="k">raise</span> <span class="ne">Exception</span><span class="p">,</span> <span class="s">&quot;No results found for search.&quot;</span>

  <span class="k">if</span> <span class="n">multi</span><span class="p">:</span>
      <span class="c"># Generator for performance</span>
      <span class="k">return</span> <span class="p">(</span><span class="n">entry</span> <span class="k">for</span> <span class="n">entry</span> <span class="ow">in</span> <span class="n">results</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
      <span class="k">if</span> <span class="n">results</span><span class="o">.</span><span class="n">Count</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">1</span><span class="p">:</span>
          <span class="k">raise</span> <span class="ne">Exception</span><span class="p">,</span> <span class="s">&quot;Found multiple results in single-search mode.  To support multiples, please pass multi=True to the find method.&quot;</span>
      <span class="k">return</span> <span class="n">results</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>  
<span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">find_last_name</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">last_name</span><span class="p">,</span> <span class="n">multi</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">nowrap</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
      <span class="err">“</span><span class="s">&quot;”Searches by sn (lastname).</span>
      <span class="n">This</span> <span class="n">can</span> <span class="n">be</span> <span class="n">a</span> <span class="n">partial</span> <span class="n">query</span><span class="p">,</span> <span class="k">as</span> <span class="nb">long</span> <span class="k">as</span> <span class="n">the</span> <span class="n">first</span>
      <span class="n">few</span> <span class="n">letters</span> <span class="n">of</span> <span class="n">last_name</span> <span class="n">are</span> <span class="n">defined</span> 
      <span class="n">By</span> <span class="n">default</span> <span class="n">searches</span> <span class="k">for</span> <span class="n">one</span> <span class="n">only</span><span class="p">,</span> <span class="k">pass</span> <span class="n">multi</span><span class="o">=</span><span class="bp">True</span> <span class="k">for</span> <span class="n">multiple</span> <span class="n">results</span><span class="o">.</span>
      <span class="n">If</span> <span class="n">you</span> <span class="n">want</span>  <span class="n">raw</span> <span class="o">.</span><span class="n">Net</span> <span class="n">SearchResult</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="nb">object</span><span class="p">(</span><span class="n">s</span><span class="p">),</span> <span class="k">pass</span> <span class="n">nowrap</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">otherwise</span>
      <span class="n">you</span> <span class="n">get</span> <span class="n">it</span> <span class="n">back</span> <span class="n">wrapped</span> <span class="ow">in</span> <span class="n">a</span> <span class="n">helper</span> <span class="n">class</span><span class="o">.</span>
      <span class="err">“””</span>
      <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">search</span><span class="p">(</span><span class="n">PARTIAL_LAST_QUERY</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="err">‘</span><span class="n">_LASTNAME</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="err">’</span><span class="p">,</span> <span class="n">last_name</span><span class="p">),</span> <span class="n">multi</span><span class="p">)</span>
      <span class="k">if</span> <span class="ow">not</span> <span class="n">nowrap</span><span class="p">:</span>
          <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_helper</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="n">result</span>
<span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">find_name</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">last_name</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">first_name</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">multi</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">nowrap</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
      <span class="err">“</span><span class="s">&quot;”Searches by sn (lastname) &amp;amp; givenName( firstname) </span>
      <span class="n">This</span> <span class="n">can</span> <span class="n">be</span> <span class="n">a</span> <span class="n">partial</span> <span class="n">query</span><span class="p">,</span> <span class="k">as</span> <span class="nb">long</span> <span class="k">as</span> <span class="n">the</span> <span class="n">first</span>
      <span class="n">few</span> <span class="n">letters</span> <span class="n">of</span> <span class="n">last_name</span> <span class="n">are</span> <span class="n">defined</span>
      <span class="n">If</span> <span class="n">firstname</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">,</span> <span class="n">it</span> <span class="n">quietly</span> <span class="n">passes</span> <span class="n">into</span> <span class="n">find_last_name</span><span class="o">.</span>
      <span class="n">By</span> <span class="n">default</span> <span class="n">searches</span> <span class="k">for</span> <span class="n">one</span> <span class="n">only</span><span class="p">,</span> <span class="k">pass</span> <span class="n">multi</span><span class="o">=</span><span class="bp">True</span> <span class="k">for</span> <span class="n">multiple</span> <span class="n">results</span><span class="o">.</span>
      <span class="n">If</span> <span class="n">you</span> <span class="n">want</span>  <span class="n">raw</span> <span class="o">.</span><span class="n">Net</span> <span class="n">SearchResult</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="nb">object</span><span class="p">(</span><span class="n">s</span><span class="p">),</span> <span class="k">pass</span> <span class="n">nowrap</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">otherwise</span>
      <span class="n">you</span> <span class="n">get</span> <span class="n">it</span> <span class="n">back</span> <span class="n">wrapped</span> <span class="ow">in</span> <span class="n">a</span> <span class="n">helper</span> <span class="n">class</span><span class="o">.</span>
      <span class="err">“””</span>
      <span class="k">if</span> <span class="ow">not</span> <span class="n">last_name</span><span class="p">:</span>
          <span class="k">raise</span> <span class="ne">Exception</span><span class="p">,</span> <span class="err">“</span><span class="n">You</span> <span class="n">must</span><span class="p">,</span> <span class="n">at</span> <span class="n">a</span> <span class="n">minimum</span><span class="p">,</span> <span class="n">specify</span> <span class="n">last_name</span> <span class="k">for</span> <span class="n">a</span> <span class="n">name</span> <span class="n">search</span><span class="o">.</span><span class="err">”</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="k">if</span> <span class="ow">not</span> <span class="n">first_name</span><span class="p">:</span>
      <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">find_last_name</span><span class="p">(</span><span class="n">last_name</span><span class="p">,</span> <span class="n">multi</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
      <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_search</span><span class="p">(</span><span class="n">PARTIAL_NAME_QUERY</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;_FIRSTNAME_&#39;</span><span class="p">,</span> <span class="n">first_name</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;_LASTNAME_&#39;</span><span class="p">,</span> <span class="n">last_name</span><span class="p">),</span> <span class="n">multi</span><span class="p">)</span>
      <span class="k">if</span> <span class="ow">not</span> <span class="n">nowrap</span><span class="p">:</span>
          <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_helper</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

  <span class="k">return</span> <span class="n">result</span>
<span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">find_account</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">account_name</span><span class="p">,</span> <span class="n">multi</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">nowrap</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
      <span class="err">“</span><span class="s">&quot;”Searches by  sAMAccountName (account_name), which should be unique</span>
      <span class="n">This</span> <span class="n">can</span> <span class="n">be</span> <span class="n">a</span> <span class="n">partial</span> <span class="n">query</span><span class="p">,</span> <span class="k">as</span> <span class="nb">long</span> <span class="k">as</span> <span class="n">the</span> <span class="n">first</span>
      <span class="n">few</span> <span class="n">letters</span> <span class="n">of</span> <span class="n">account_name</span> <span class="n">are</span> <span class="n">defined</span>
      <span class="n">If</span> <span class="n">firstname</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">,</span> <span class="n">it</span> <span class="n">quietly</span> <span class="n">passes</span> <span class="n">into</span> <span class="n">find_last_name</span><span class="o">.</span>
      <span class="n">By</span> <span class="n">default</span> <span class="n">searches</span> <span class="k">for</span> <span class="n">one</span> <span class="n">only</span><span class="p">,</span> <span class="k">pass</span> <span class="n">multi</span><span class="o">=</span><span class="bp">True</span> <span class="k">for</span> <span class="n">multiple</span> <span class="n">results</span><span class="o">.</span>
      <span class="n">If</span> <span class="n">you</span> <span class="n">want</span>  <span class="n">raw</span> <span class="o">.</span><span class="n">Net</span> <span class="n">SearchResult</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="nb">object</span><span class="p">(</span><span class="n">s</span><span class="p">),</span> <span class="k">pass</span> <span class="n">nowrap</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">otherwise</span>
      <span class="n">you</span> <span class="n">get</span> <span class="n">it</span> <span class="n">back</span> <span class="n">wrapped</span> <span class="ow">in</span> <span class="n">a</span> <span class="n">helper</span> <span class="n">class</span><span class="o">.</span>
      <span class="err">“””</span>
      <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">search</span><span class="p">(</span><span class="n">ACCOUNT_QUERY</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="err">‘</span><span class="n">_ACCOUNTNAME</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="err">’</span><span class="p">,</span> <span class="n">account_name</span><span class="p">),</span> <span class="n">multi</span><span class="p">)</span>
      <span class="k">if</span> <span class="ow">not</span> <span class="n">nowrap</span><span class="p">:</span>
          <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_helper</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="n">result</span>
<span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">find_first_name</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">first_name</span><span class="p">,</span> <span class="n">multi</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">nowrap</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
      <span class="err">“</span><span class="s">&quot;”Searches by givenName, which should be unique</span>
      <span class="n">This</span> <span class="n">can</span> <span class="n">be</span> <span class="n">a</span> <span class="n">partial</span> <span class="n">query</span><span class="p">,</span> <span class="k">as</span> <span class="nb">long</span> <span class="k">as</span> <span class="n">the</span> <span class="n">first</span>
      <span class="n">few</span> <span class="n">letters</span> <span class="n">of</span> <span class="n">account_name</span> <span class="n">are</span> <span class="n">defined</span>
      <span class="n">If</span> <span class="n">firstname</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">,</span> <span class="n">it</span> <span class="n">quietly</span> <span class="n">passes</span> <span class="n">into</span> <span class="n">find_last_name</span><span class="o">.</span>
      <span class="n">By</span> <span class="n">default</span> <span class="n">searches</span> <span class="k">for</span> <span class="n">one</span> <span class="n">only</span><span class="p">,</span> <span class="k">pass</span> <span class="n">multi</span><span class="o">=</span><span class="bp">True</span> <span class="k">for</span> <span class="n">multiple</span> <span class="n">results</span><span class="o">.</span>
      <span class="n">If</span> <span class="n">you</span> <span class="n">want</span>  <span class="n">raw</span> <span class="o">.</span><span class="n">Net</span> <span class="n">SearchResult</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="nb">object</span><span class="p">(</span><span class="n">s</span><span class="p">),</span> <span class="k">pass</span> <span class="n">nowrap</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">otherwise</span>
      <span class="n">you</span> <span class="n">get</span> <span class="n">it</span> <span class="n">back</span> <span class="n">wrapped</span> <span class="ow">in</span> <span class="n">a</span> <span class="n">helper</span> <span class="n">class</span><span class="o">.</span>
      <span class="err">“””</span>
      <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">search</span><span class="p">(</span><span class="n">PARTIAL_FIRST_QUERY</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="err">‘</span><span class="n">_FIRSTNAME</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="err">’</span><span class="p">,</span> <span class="n">first_name</span><span class="p">),</span> <span class="n">multi</span><span class="p">)</span>
      <span class="k">if</span> <span class="ow">not</span> <span class="n">nowrap</span><span class="p">:</span>
          <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_helper</span><span class="p">(</span><span class="n">result</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="n">result</span></code></pre></div>
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Double Clicking in IronPython + Silverlight]]></title>
    <link href="http://bytes.codes/2009/09/02/double-clicking-in-ironpython-and-silverlight/"/>
    <updated>2009-09-02T00:00:00-06:00</updated>
    <id>http://bytes.codes/2009/09/02/double-clicking-in-ironpython-and-silverlight</id>
    <content type="html"><![CDATA[<p>Silverlight rather oddly lacks a double click event.  You can detect single click, but for double clicking you’re on your own.  I found some examples for C#, but none for IronPython and had, a few months ago, ported some code I found <a href="http://shemesh.wordpress.com/2009/03/05/silverlight-attach-a-double-click-to-any-object/">here</a> for IronPython.</p>

<p>I’ve been using it in application development and user testing for about 6 months and it works fairly well in both Silverlight 2 and 3, although YMMV.</p>

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">CLICK_INTERVAL</span> <span class="o">=</span> <span class="mi">500</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">ClickHandler</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="err">“</span><span class="s">&quot;”Attach a Double Click handler to any given UIElement,</span>
    <span class="k">as</span> <span class="n">by</span> <span class="n">default</span> <span class="n">Silverlight</span> <span class="n">lacks</span> <span class="n">support</span> <span class="k">for</span> <span class="n">double</span> <span class="n">clicking</span><span class="o">.</span>
    <span class="err">“””</span>
    <span class="n">_lastClickTime</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">_callback</span> <span class="o">=</span> <span class="bp">None</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nd">@staticmethod</span>
<span class="k">def</span> <span class="nf">attachDoubleClickHandler</span><span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">ClickHandler</span><span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="n">callback</span><span class="p">)</span>
 
<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">callback</span><span class="p">):</span>
    <span class="n">target</span><span class="o">.</span><span class="n">MouseLeftButtonUp</span> <span class="o">+=</span> <span class="bp">self</span><span class="o">.</span><span class="n">target_MouseLeftButtonUp</span>
    <span class="n">target</span><span class="o">.</span><span class="n">MouseLeftButtonDown</span> <span class="o">+=</span> <span class="bp">self</span><span class="o">.</span><span class="n">target_MouseLeftButtonDown</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_callback</span> <span class="o">=</span> <span class="n">callback</span>
 
<span class="k">def</span> <span class="nf">target_MouseLeftButtonUp</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sender</span><span class="p">,</span> <span class="n">args</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_lastClickTime</span> <span class="o">=</span> <span class="n">DateTime</span><span class="o">.</span><span class="n">Now</span><span class="o">.</span><span class="n">Ticks</span> <span class="o">/</span> <span class="mi">10000</span>
 
<span class="k">def</span> <span class="nf">target_MouseLeftButtonDown</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sender</span><span class="p">,</span> <span class="n">args</span><span class="p">):</span>
    <span class="n">now</span> <span class="o">=</span> <span class="n">DateTime</span><span class="o">.</span><span class="n">Now</span><span class="o">.</span><span class="n">Ticks</span> <span class="o">/</span> <span class="mi">10000</span>
    <span class="k">if</span> <span class="n">now</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">_lastClickTime</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="n">CLICK_INTERVAL</span> <span class="ow">and</span> \
      <span class="n">now</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">_lastClickTime</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">25</span><span class="p">:</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">_callback</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span></code></pre></div>
</code></pre>

<p>You may want to tweak the click interval based on what works for you.  500 milliseconds worked well with my users, for the application in question. To attach a ClickHandler simply invoke the static method <code>ClickHandler.attachDoubleClickHandler(«uiElementObj», «callbackFunc»)</code></p>

<!--more-->

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">System</span> <span class="kn">import</span> <span class="n">Uri</span><span class="p">,</span> <span class="n">UriKind</span>
<span class="kn">from</span> <span class="nn">System.Windows</span> <span class="kn">import</span> <span class="n">Application</span><span class="p">,</span> <span class="n">UIElement</span>
<span class="kn">from</span> <span class="nn">System.Windows.Browser</span> <span class="kn">import</span> <span class="n">HtmlPage</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">util</span> <span class="kn">import</span> <span class="n">ClickHandler</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Foo</span><span class="p">(</span><span class="n">UIElement</span><span class="p">):</span>
  <span class="err">“</span><span class="s">&quot;”Sample UIElement class demonstrating usage of </span>
  <span class="n">ClickHandler</span> <span class="ow">and</span> <span class="n">it</span><span class="err">’</span><span class="n">s</span> <span class="n">events</span><span class="o">.</span>
  <span class="err">“””</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="err">&lt;</span><span class="nf">strong</span><span class="o">&gt;</span><span class="n">init</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="n">Application</span><span class="o">.</span><span class="n">LoadComponent</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">Uri</span><span class="p">(</span><span class="err">‘</span><span class="n">xaml</span><span class="o">/</span><span class="n">widgets</span><span class="o">/</span><span class="n">foo</span><span class="o">.</span><span class="n">xaml</span><span class="err">’</span><span class="p">,</span>
            <span class="n">UriKind</span><span class="o">.</span><span class="n">Relative</span><span class="p">))</span>
    <span class="n">ClickHandler</span><span class="o">.</span><span class="n">attachDoubleClickHandler</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">evt_dblClicked</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">evt_dblClicked</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sender</span><span class="p">,</span> <span class="n">args</span><span class="p">):</span>
    <span class="err">“</span><span class="s">&quot;”Event for double click; this gets passed</span>
    <span class="n">the</span> <span class="n">original</span> <span class="err">“</span><span class="n">MouseLeftButtonDown</span><span class="err">”</span> <span class="n">arguments</span> 
    <span class="n">which</span> <span class="n">ClickHandler</span> <span class="n">got</span><span class="p">,</span> <span class="n">so</span> <span class="n">you</span><span class="err">’</span><span class="n">ll</span> <span class="n">want</span> <span class="n">to</span> <span class="n">match</span>
    <span class="n">the</span> <span class="err">“</span><span class="n">MouseButtonEventHandler</span><span class="err">”</span> <span class="n">delegate</span> <span class="n">arguments</span><span class="o">.</span>
    <span class="n">Object</span> <span class="n">sender</span> <span class="o">-</span> <span class="n">the</span> <span class="nb">object</span> <span class="n">the</span> <span class="n">mouse</span> <span class="n">click</span> <span class="n">handler</span> <span class="ow">is</span> <span class="n">attached</span> <span class="n">to</span><span class="p">,</span>
            <span class="ow">in</span> <span class="n">this</span> <span class="n">case</span><span class="p">,</span> <span class="n">should</span> <span class="n">be</span> <span class="n">the</span> <span class="n">same</span> <span class="k">as</span> <span class="err">‘</span><span class="bp">self</span><span class="err">’</span>
    <span class="n">System</span><span class="o">.</span><span class="n">Windows</span><span class="o">.</span><span class="n">Input</span><span class="o">.</span><span class="n">MouseButtonEventArgs</span> <span class="n">args</span> <span class="o">-</span> <span class="n">the</span> <span class="n">mouse</span> <span class="n">event</span> <span class="n">arguments</span>
    <span class="err">“””</span>
    <span class="n">HtmlPage</span><span class="o">.</span><span class="n">Window</span><span class="o">.</span><span class="n">Alert</span><span class="p">(</span><span class="err">‘</span><span class="o">%</span><span class="n">s</span> <span class="n">got</span> <span class="n">double</span> <span class="n">clicked</span><span class="err">!’</span> <span class="o">%</span> <span class="n">sender</span><span class="p">)</span></code></pre></div></p>

<p>It’s not the world’s greatest solution, but it gets the job done.</p>

]]></content>
  </entry>
  
</feed>
